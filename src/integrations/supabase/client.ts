// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://dzwqigkbzytgnbtwvyig.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR6d3FpZ2tienl0Z25idHd2eWlnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEyMDcyODQsImV4cCI6MjA1Njc4MzI4NH0.rBoZw3rjYz7i5QVR2eax5YhvuKCNbESToz3mHA3ZmmU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Determine the current origin for redirects
const origin = typeof window !== 'undefined' ? window.location.origin : '';

// Configure the redirect URL for auth redirects
const options = {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    flowType: 'pkce' as const,
  }
};

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, options);

// Helper for custom auth emails
export async function sendAuthEmail(email: string, type: 'signup' | 'reset' | 'magic_link', redirectUrl: string) {
  try {
    console.log(`Sending ${type} email to ${email}`);
    
    const response = await supabase.functions.invoke('resend-auth-email', {
      body: {
        email,
        type,
        redirectUrl: redirectUrl || `${origin}/auth?tab=signin`,
        meta: {
          origin
        }
      }
    });
    
    console.log('Custom auth email response:', response);
    
    // Check if there's a network error with the function invocation itself
    if (response.error) {
      console.error('Error from auth email function:', response.error);
      return {
        success: false,
        error: response.error.message || 'Failed to send authentication email'
      };
    }
    
    // Process the response from the function itself
    if (response.data?.success === false) {
      console.error('Auth email function returned an error:', response.data.error);
      return {
        success: false,
        error: response.data.error || 'Email service reported an error'
      };
    }
    
    return {
      success: true,
      data: response.data
    };
  } catch (error) {
    console.error('Error sending custom auth email:', error);
    return {
      success: false,
      error: error.message || 'Unexpected error sending authentication email'
    };
  }
}
